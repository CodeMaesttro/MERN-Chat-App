{"ast":null,"code":"import { create } from 'zustand';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\nimport { useNavigate } from 'react-router-dom';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  withCredentials: true\n});\nexport const useAuthStore = create(set => ({\n  // State\n  authUser: null,\n  isSigningUp: false,\n  isLoggingIn: false,\n  isUpdatingProfile: false,\n  isCheckingAuth: true,\n  onlineUsers: [],\n  // Actions\n  checkAuth: async () => {\n    try {\n      const res = await api.get('/auth/check');\n      set({\n        authUser: res.data\n      });\n    } catch (error) {\n      console.log('Error in checkAuth:', error);\n      set({\n        authUser: null\n      });\n    } finally {\n      set({\n        isCheckingAuth: false\n      });\n    }\n  },\n  // signup: async (data) => {\n  //   const navigate = useNavigate;\n  //   set({ isSigningUp: true });\n  //   try {\n  //     const res = await api.post('/auth/sign-up', data);\n  //     set({ authUser: res.data });\n  //     toast.success('Account created successfully');\n  //     navigate (\"/login\");\n  //   } catch (error) {\n  //     toast.error(error.response?.data?.message || 'Signup failed');\n  //   } finally {\n  //     set({ isSigningUp: false });\n  //   }\n  // },\n\n  signup: async (data, navigate) => {\n    set({\n      isSigningUp: true\n    });\n    try {\n      const res = await api.post('/auth/sign-up', data);\n      // set({ authUser: res.data });\n      toast.success('Account created successfully');\n      navigate('/login');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Signup failed');\n    } finally {\n      set({\n        isSigningUp: false\n      });\n    }\n  },\n  login: async data => {\n    set({\n      isLoggingIn: true\n    });\n    try {\n      const res = await api.post('/auth/log-in', data);\n      set({\n        authUser: res.data\n      });\n      toast.success('Logged in successfully');\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      toast.error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Login failed');\n    } finally {\n      set({\n        isLoggingIn: false\n      });\n    }\n  },\n  logout: async () => {\n    try {\n      await api.post('/auth/log-out');\n      set({\n        authUser: null\n      });\n      toast.success('Logged out successfully');\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      toast.error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Logout failed');\n    }\n  },\n  updateProfile: async data => {\n    set({\n      isUpdatingProfile: true\n    });\n    try {\n      const res = await api.put('/auth/update-profile', data);\n      set({\n        authUser: res.data\n      });\n      toast.success('Profile updated successfully');\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.log('Error in updateProfile:', error);\n      toast.error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Profile update failed');\n    } finally {\n      set({\n        isUpdatingProfile: false\n      });\n    }\n  },\n  setOnlineUsers: users => {\n    set({\n      onlineUsers: users\n    });\n  }\n}));","map":{"version":3,"names":["create","axios","toast","useNavigate","api","baseURL","process","env","REACT_APP_API_URL","withCredentials","useAuthStore","set","authUser","isSigningUp","isLoggingIn","isUpdatingProfile","isCheckingAuth","onlineUsers","checkAuth","res","get","data","error","console","log","signup","navigate","post","success","_error$response","_error$response$data","response","message","login","_error$response2","_error$response2$data","logout","_error$response3","_error$response3$data","updateProfile","put","_error$response4","_error$response4$data","setOnlineUsers","users"],"sources":["C:/Users/HOSTERSHUB/Desktop/mern-chatApp/chat-frontend/src/store/useAuthStore.js"],"sourcesContent":["import { create } from 'zustand';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\nimport { useNavigate } from 'react-router-dom';\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  withCredentials: true,\n});\n\nexport const useAuthStore = create((set) => ({\n  // State\n  authUser: null,\n  isSigningUp: false,\n  isLoggingIn: false,\n  isUpdatingProfile: false,\n  isCheckingAuth: true,\n  onlineUsers: [],\n\n  // Actions\n  checkAuth: async () => {\n    try {\n      const res = await api.get('/auth/check');\n      set({ authUser: res.data });\n    } catch (error) {\n      console.log('Error in checkAuth:', error);\n      set({ authUser: null });\n    } finally {\n      set({ isCheckingAuth: false });\n    }\n  },\n\n  // signup: async (data) => {\n  //   const navigate = useNavigate;\n  //   set({ isSigningUp: true });\n  //   try {\n  //     const res = await api.post('/auth/sign-up', data);\n  //     set({ authUser: res.data });\n  //     toast.success('Account created successfully');\n  //     navigate (\"/login\");\n  //   } catch (error) {\n  //     toast.error(error.response?.data?.message || 'Signup failed');\n  //   } finally {\n  //     set({ isSigningUp: false });\n  //   }\n  // },\n\n  signup: async (data, navigate) => {\n    set({ isSigningUp: true });\n    try {\n      const res = await api.post('/auth/sign-up', data);\n      // set({ authUser: res.data });\n      toast.success('Account created successfully');\n      navigate('/login');\n    } catch (error) {\n      toast.error(error.response?.data?.message || 'Signup failed');\n    } finally {\n      set({ isSigningUp: false });\n    }\n  },\n  \n\n  login: async (data) => {\n    set({ isLoggingIn: true });\n    try {\n      const res = await api.post('/auth/log-in', data);\n      set({ authUser: res.data });\n      toast.success('Logged in successfully');\n    } catch (error) {\n      toast.error(error.response?.data?.message || 'Login failed');\n    } finally {\n      set({ isLoggingIn: false });\n    }\n  },\n\n  logout: async () => {\n    try {\n      await api.post('/auth/log-out');\n      set({ authUser: null });\n      toast.success('Logged out successfully');\n    } catch (error) {\n      toast.error(error.response?.data?.message || 'Logout failed');\n    }\n  },\n\n  updateProfile: async (data) => {\n    set({ isUpdatingProfile: true });\n    try {\n      const res = await api.put('/auth/update-profile', data);\n      set({ authUser: res.data });\n      toast.success('Profile updated successfully');\n    } catch (error) {\n      console.log('Error in updateProfile:', error);\n      toast.error(error.response?.data?.message || 'Profile update failed');\n    } finally {\n      set({ isUpdatingProfile: false });\n    }\n  },\n\n  setOnlineUsers: (users) => {\n    set({ onlineUsers: users });\n  },\n}));"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}